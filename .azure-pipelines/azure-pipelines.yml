trigger:
- master
- releases/*

pool:
  vmImage: 'ubuntu-16.04'

container: ninhu/r-sdk-build:latest

variables:
- name: TEST_LOCATION
  value: eastus2
- name: TEST_RESOURCE_GROUP
  value: static_resources_r_sdk
- name: TEST_SUBSCRIPTION_ID
  value: 4faaaf21-663f-4391-96fd-47197c630979
- name: TEST_WORKSPACE_NAME
  value: r_sdk_workspace
- name: TEST_BUILD_ID
  value: $(Build.BuildId)

steps:
  - task: Bash@3
    inputs:
      targetType: 'inline'
      script: 'pip install --user azureml-sdk'

  - task: AzureCLI@1
    inputs:
      azureSubscription: 'Project Vienna Build Tests (4faaaf21-663f-4391-96fd-47197c630979)'
      scriptLocation: inlineScript
      inlineScript: |
        python -c "from azureml._base_sdk_common.common import perform_interactive_login; perform_interactive_login(username='$servicePrincipalId', password='$servicePrincipalKey', service_principal=True, tenant='$tenantId')"
        R -e 'dir.create(Sys.getenv("R_LIBS_USER"), recursive = TRUE);
              .libPaths(Sys.getenv("R_LIBS_USER"));
              package_location <- devtools::build();
              Sys.setenv("PACKAGE_LOCATION" = package_location);
              install.packages("rcmdcheck", repos = "http://cran.us.r-project.org");
              library("rcmdcheck");
              check_results <- rcmdcheck(".", args = c("--no-manual", "--no-tests"));
              stopifnot(length(check_results$errors) == 0);
              stopifnot(length(check_results$warnings) == 0);
              options(testthat.output_file = "TEST-ALL.xml");
              testthat::test_dir("tests/testthat", reporter = "junit")'
      addSpnToEnvironment: true
    displayName: 'Build and Test R SDK'
  - task: PublishTestResults@2
    inputs:
      testResultsFormat: 'JUnit'
      testResultsFiles: '**/TEST-*.xml'
      failTaskOnFailedTests: true
