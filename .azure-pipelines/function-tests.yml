trigger:
- master

pool:
  vmImage: 'ubuntu-16.04'

container: ninhu/r-sdk-build:latest

variables:
  ${{ if in( variables['Build.Reason'], 'Manual', 'IndividualCI') }}:
    TEST_SUBSCRIPTION_ID: ${{ variables['CI_SUBSCRIPTION_ID'] }}
  servicePrincipalId: $(SERVICE_PRINCIPAL_ID)
  servicePrincipalKey: $(SERVICE_PRINCIPAL_KEY)
  tenantId: $(TENANT)

steps:
  - task: Bash@3
    inputs:
      targetType: 'inline'
      script: |
        az login --service-principal -u ${{ variables['servicePrincipalId'] }}-p ${{ variables['servicePrincipalKey'] }}--tenant${{ variables['tenantId'] }}
        az account set --subscription ${{ variables['TEST_SUBSCRIPTION_ID'] }}
    displayName: 'azure login'
  - task: Bash@3
    inputs:
      targetType: 'inline'
      script: |
        pip install --user azureml-sdk
        R -e 'dir.create(Sys.getenv("R_LIBS_USER"), recursive = TRUE);
              .libPaths(Sys.getenv("R_LIBS_USER"));
              # build and install R sdk
              devtools::install_deps(upgrade = FALSE);
              package_location <- devtools::build();
              install.packages(package_location, repos = NULL)'
    displayName: 'Build and Install SDK'
  - task: Bash@3
    inputs:
      targetType: 'inline'
      script: |
        R -e '# needed to load all non exported packages for testing
              devtools::load_all();
              options(testthat.output_file = "TEST-ALL.xml");
              testthat::test_dir("tests/testthat", reporter = "junit")'
    displayName: 'Run R SDK Tests'

  - task: PublishTestResults@2
    inputs:
      testResultsFormat: 'JUnit'
      testResultsFiles: '**/TEST-*.xml'
      failTaskOnFailedTests: true
