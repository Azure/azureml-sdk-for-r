trigger:
- master

pool:
  vmImage: 'ubuntu-16.04'

container: ninhu/r-sdk-build:latest

steps:
  - task: Bash@3
    inputs:
      targetType: 'inline'
      script: |
        Rscript './.azure-pipelines/scripts/validate_copyright_header.R' 'R'
    displayName: 'Validate copyright header'

  - task: Bash@3
    inputs:
      targetType: 'inline'
      script: |
        pip install --user azureml-sdk
        R -e 'dir.create(Sys.getenv("R_LIBS_USER"), recursive = TRUE);
              .libPaths(Sys.getenv("R_LIBS_USER"));
              # build and install R sdk
              devtools::install_deps(upgrade = FALSE);
              package_location <- devtools::build();
              install.packages(package_location, repos = NULL)'
    displayName: 'Build and Install SDK'

  - task: Bash@3
    inputs:
      targetType: 'inline'
      script: |
        Rscript './.azure-pipelines/scripts/check_code_style.R' 'R'
        R -e 'install.packages("covr", repos = "http://cran.us.r-project.org");
              covr::codecov()'
    displayName: 'Check code style and code coverage'

  - task: Bash@3
    inputs:
      targetType: 'inline'
      script: |
        R -e 'library("rcmdcheck");
        check_results <- rcmdcheck(".", args = c("--no-manual", "--no-tests"));
        stopifnot(length(check_results$errors) == 0);
        stopifnot(length(check_results$warnings) == 0);
        stopifnot(length(check_results$notes) == 0)'
    displayName: 'Check package build'
    
